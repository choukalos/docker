define(['jquery','Magento_Braintree/js/view/payment/adapter','Magento_Checkout/js/model/quote','mage/translate'],function($,braintree,quote,$t){'use strict';return{config:null,setConfig:function(config){this.config=config;this.config.thresholdAmount=parseFloat(config.thresholdAmount);},getCode:function(){return'three_d_secure';},validate:function(context){var client=braintree.getApiClient(),state=$.Deferred(),totalAmount=quote.totals()['base_grand_total'],billingAddress=quote.billingAddress();if(!this.isAmountAvailable(totalAmount)||!this.isCountryAvailable(billingAddress.countryId)){state.resolve();return state.promise();}
client.verify3DS({amount:totalAmount,creditCard:context.paymentMethodNonce},function(error,response){var liability;if(error){state.reject(error.message);return;}
liability={shifted:response.verificationDetails.liabilityShifted,shiftPossible:response.verificationDetails.liabilityShiftPossible};if(liability.shifted||!liability.shifted&&!liability.shiftPossible){context.paymentMethodNonce=response.nonce;state.resolve();}else{state.reject($t('Please try again with another form of payment.'));}});return state.promise();},isAmountAvailable:function(amount){amount=parseFloat(amount);return amount>=this.config.thresholdAmount;},isCountryAvailable:function(countryId){var key,specificCountries=this.config.specificCountries;if(!specificCountries.length){return true;}
for(key in specificCountries){if(countryId===specificCountries[key]){return true;}}
return false;}};});