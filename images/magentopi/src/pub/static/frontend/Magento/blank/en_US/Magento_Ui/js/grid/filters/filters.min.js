define(['underscore','mageUtils','uiLayout','uiCollection'],function(_,utils,layout,Collection){'use strict';function extractPreview(elem){return{label:elem.label,preview:elem.getPreview(),elem:elem};}
function removeEmpty(data){return utils.mapRecursive(data,utils.removeEmptyValues.bind(utils));}
return Collection.extend({defaults:{template:'ui/grid/filters/filters',stickyTmpl:'ui/grid/sticky/filters',_processed:[],columnsProvider:'ns = ${ $.ns }, componentType = columns',applied:{placeholder:true},filters:{placeholder:true},templates:{filters:{base:{parent:'${ $.$data.filters.name }',name:'${ $.$data.column.index }',provider:'${ $.$data.filters.name }',dataScope:'${ $.$data.column.index }',label:'${ $.$data.column.label }',imports:{visible:'${ $.$data.column.name }:visible'}},text:{component:'Magento_Ui/js/form/element/abstract',template:'ui/grid/filters/field'},select:{component:'Magento_Ui/js/form/element/select',template:'ui/grid/filters/field',options:'${ JSON.stringify($.$data.column.options) }',caption:' '},dateRange:{component:'Magento_Ui/js/grid/filters/range',rangeType:'date'},textRange:{component:'Magento_Ui/js/grid/filters/range',rangeType:'text'}}},chipsConfig:{name:'${ $.name }_chips',provider:'${ $.chipsConfig.name }',component:'Magento_Ui/js/grid/filters/chips'},listens:{active:'updatePreviews',applied:'cancel updateActive'},statefull:{applied:true},exports:{applied:'${ $.provider }:params.filters'},imports:{'onColumnsUpdate':'${ $.columnsProvider }:elems'},modules:{columns:'${ $.columnsProvider }',chips:'${ $.chipsConfig.provider }'}},initialize:function(){_.bindAll(this,'updateActive');this._super().initChips().cancel();return this;},initObservable:function(){this._super().track({active:[],previews:[]});return this;},initChips:function(){layout([this.chipsConfig]);this.chips('insertChild',this.name);return this;},initElement:function(elem){this._super();elem.on('elems',this.updateActive);this.updateActive();return this;},clear:function(filter){filter?filter.clear():_.invoke(this.active,'clear');this.apply();return this;},apply:function(){this.set('applied',removeEmpty(this.filters));return this;},cancel:function(){this.set('filters',utils.copy(this.applied));return this;},setData:function(data,partial){var filters=partial?this.filters:{};data=utils.extend({},filters,data);this.set('filters',data);return this;},addFilter:function(column){var index=column.index,processed=this._processed,filter;if(!column.filter||_.contains(processed,index)){return this;}
filter=this.buildFilter(column);processed.push(index);layout([filter]);return this;},buildFilter:function(column){var filters=this.templates.filters,filter=column.filter,type=filters[filter.filterType];if(_.isObject(filter)&&type){filter=utils.extend({},type,filter);}else if(_.isString(filter)){filter=filters[filter];}
filter=utils.extend({},filters.base,filter);return utils.template(filter,{filters:this,column:column},true,true);},getRanges:function(){return this.elems.filter(function(filter){return filter.isRange;});},getPlain:function(){return this.elems.filter(function(filter){return!filter.isRange;});},isFilterVisible:function(filter){return filter.visible()||this.isFilterActive(filter);},isFilterActive:function(filter){return _.contains(this.active,filter);},hasVisible:function(){return this.elems.some(this.isFilterVisible,this);},updateActive:function(){var applied=_.keys(this.applied);this.active=this.elems.filter(function(elem){return _.contains(applied,elem.index);});return this;},countActive:function(){return this.active.length;},updatePreviews:function(filters){var previews=filters.map(extractPreview);this.previews=_.compact(previews);return this;},onColumnsUpdate:function(columns){columns.forEach(this.addFilter,this);}});});