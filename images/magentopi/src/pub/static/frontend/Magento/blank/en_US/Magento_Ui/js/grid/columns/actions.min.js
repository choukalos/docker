define(['underscore','mageUtils','uiRegistry','./column','Magento_Ui/js/modal/confirm'],function(_,utils,registry,Column,confirm){'use strict';return Column.extend({defaults:{bodyTmpl:'ui/grid/cells/actions',sortable:false,draggable:false,actions:[],rows:[],rowsProvider:'${ $.parentName }',fieldClass:{'data-grid-actions-cell':true},templates:{actions:{}},imports:{rows:'${ $.rowsProvider }:rows'},listens:{rows:'updateActions'}},initObservable:function(){this._super().track('actions');return this;},getAction:function(rowIndex,actionIndex){var rowActions=this.actions[rowIndex];return rowActions&&actionIndex?rowActions[actionIndex]:rowActions;},getVisibleActions:function(rowIndex){var rowActions=this.getAction(rowIndex);return _.filter(rowActions,this.isActionVisible,this);},addAction:function(index,action){var actionTmpls=this.templates.actions;actionTmpls[index]=action;this.updateActions();return this;},updateActions:function(){this.actions=this.rows.map(this._formatActions,this);return this;},_formatActions:function(row,rowIndex){var rowActions=row[this.index]||{},recordId=row[this.indexField],customActions=this.templates.actions;function iterate(action,index){action=utils.extend({index:index,rowIndex:rowIndex,recordId:recordId},action);return utils.template(action,row,true);}
rowActions=_.mapObject(rowActions,iterate);customActions=_.map(customActions,iterate);customActions.forEach(function(action){rowActions[action.index]=action;});return rowActions;},applyAction:function(actionIndex,rowIndex){var action=this.getAction(rowIndex,actionIndex),callback=this._getCallback(action);action.confirm?this._confirm(action,callback):callback();return this;},getActionHandler:function(action){var index=action.index,rowIndex=action.rowIndex;if(this.isHandlerRequired(index,rowIndex)){return this.applyAction.bind(this,index,rowIndex);}},isHandlerRequired:function(actionIndex,rowIndex){var action=this.getAction(rowIndex,actionIndex);return _.isObject(action.callback)||action.confirm||!action.href;},_getCallback:function(action){var args=[action.index,action.recordId,action],callback=action.callback;if(utils.isObject(callback)){args.unshift(callback.target);callback=registry.async(callback.provider);}else if(_.isArray(callback)){return this._getCallbacks(action);}else if(!_.isFunction(callback)){callback=this.defaultCallback.bind(this);}
return function(){callback.apply(callback,args);};},_getCallbacks:function(action){var callback=action.callback,callbacks=[],tmpCallback;_.each(callback,function(cb){tmpCallback={action:registry.async(cb.provider),args:_.compact([cb.target,cb.params])};callbacks.push(tmpCallback);});return function(){_.each(callbacks,function(cb){cb.action.apply(cb.action,cb.args);});};},defaultCallback:function(actionIndex,recordId,action){window.location.href=action.href;},_confirm:function(action,callback){var confirmData=action.confirm;confirm({title:confirmData.title,content:confirmData.message,actions:{confirm:callback}});},isSingle:function(rowIndex){return this.getVisibleActions(rowIndex).length===1;},isMultiple:function(rowIndex){return this.getVisibleActions(rowIndex).length>1;},isActionVisible:function(action){return action.hidden!==true;},hasFieldAction:function(){return false;}});});