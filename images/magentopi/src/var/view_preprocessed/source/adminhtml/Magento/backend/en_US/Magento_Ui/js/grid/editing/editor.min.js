define(['underscore','mageUtils','uiLayout','mage/translate','uiCollection'],function(_,utils,layout,$t,Collection){'use strict';return Collection.extend({defaults:{rowButtonsTmpl:'ui/grid/editing/row-buttons',headerButtonsTmpl:'ui/grid/editing/header-buttons',successMsg:$t('You have successfully saved your edits.'),errorsCount:0,bulkEnabled:true,multiEditingButtons:true,singleEditingButtons:true,isMultiEditing:false,isSingleEditing:false,permanentlyActive:false,rowsData:[],fields:{},templates:{record:{parent:'${ $.$data.editor.name }',name:'${ $.$data.recordId }',component:'Magento_Ui/js/grid/editing/record',columnsProvider:'${ $.$data.editor.columnsProvider }',editorProvider:'${ $.$data.editor.name }',preserveFields:{'${ $.$data.editor.indexField }':true}}},bulkConfig:{component:'Magento_Ui/js/grid/editing/bulk',name:'${ $.name }_bulk',editorProvider:'${ $.name }',columnsProvider:'${ $.columnsProvider }'},clientConfig:{component:'Magento_Ui/js/grid/editing/client',name:'${ $.name }_client'},viewConfig:{component:'Magento_Ui/js/grid/editing/editor-view',name:'${ $.name }_view',model:'${ $.name }',columnsProvider:'${ $.columnsProvider }'},imports:{rowsData:'${ $.dataProvider }:data.items'},listens:{'${ $.dataProvider }:reloaded':'cancel','${ $.selectProvider }:selected':'onSelectionsChange'},modules:{source:'${ $.dataProvider }',client:'${ $.clientConfig.name }',columns:'${ $.columnsProvider }',bulk:'${ $.bulkConfig.name }',selections:'${ $.selectProvider }'}},initialize:function(){_.bindAll(this,'updateState','countErrors','onDataSaved','onSaveError');this._super().initBulk().initClient().initView();return this;},initObservable:function(){this._super().track(['errorsCount','isMultiEditing','isSingleEditing','isSingleColumnEditing','changed']).observe({canSave:true,activeRecords:[],messages:[]});return this;},initBulk:function(){if(this.bulkEnabled){layout([this.bulkConfig]);}
return this;},initView:function(){layout([this.viewConfig]);return this;},initClient:function(){layout([this.clientConfig]);return this;},initRecord:function(id,isIndex){var record=this.buildRecord(id,isIndex);layout([record]);return this;},initElement:function(record){record.on({'active':this.updateState,'errorsCount':this.countErrors});this.updateState();return this._super();},buildRecord:function(id,isIndex){var recordId=this.getId(id,isIndex),recordTmpl=this.templates.record,record;if(this.getRecord(recordId)){return this;}
record=utils.template(recordTmpl,{editor:this,recordId:id});record.recordId=id;record.data=this.getRowData(id);return record;},edit:function(id,isIndex){var recordId=this.getId(id,isIndex),record=this.getRecord(recordId);record?record.active(true):this.initRecord(recordId);return this;},startEdit:function(id,isIndex){var recordId=this.getId(id,isIndex);this.selections().deselectAll().select(recordId);return this.edit(recordId);},cancel:function(){this.reset().hide().clearMessages().bulk('clear');return this;},hide:function(){this.activeRecords.each('active',false);return this;},reset:function(){this.elems.each(function(record){this.resetRecord(record.recordId);},this);return this;},save:function(){var data;if(!this.isValid()){return this;}
data={items:this.getData()};this.clearMessages().columns('showLoader');this.client().save(data).done(this.onDataSaved).fail(this.onSaveError);return this;},validate:function(){return this.activeRecords.map(function(record){return{target:record,valid:record.isValid()};});},isValid:function(){return _.every(this.validate(),'valid');},getData:function(){var data=this.activeRecords.map('getData');return _.indexBy(data,this.indexField);},setData:function(data,partial){this.activeRecords.each('setData',data,partial);return this;},resetRecord:function(id,isIndex){var record=this.getRecord(id,isIndex),data=this.getRowData(id,isIndex);if(record&&data){record.setData(data);}
return this;},getRecord:function(id,isIndex){return this.elems.findWhere({recordId:this.getId(id,isIndex)});},formRecordName:function(id,isIndex){id=this.getId(id,isIndex);return this.name+'.'+id;},disableFields:function(fields){var columns=this.columns().elems(),data=utils.copy(this.fields);columns.forEach(function(column){var index=column.index,field=data[index]=data[index]||{};field.disabled=_.contains(fields,index);});this.set('fields',data);return this;},getId:function(id,isIndex){var rowsData=this.rowsData,record;if(isIndex===true){record=rowsData[id];id=record?record[this.indexField]:false;}
return id;},getRowData:function(id,isIndex){id=this.getId(id,isIndex);return _.find(this.rowsData,function(row){return row[this.indexField]===id;},this);},isActive:function(id,isIndex){var record=this.getRecord(id,isIndex);return _.contains(this.activeRecords(),record);},hasActive:function(){return!!this.activeRecords().length||this.permanentlyActive;},countActive:function(){return this.activeRecords().length;},countErrors:function(){var errorsCount=0;this.activeRecords.each(function(record){errorsCount+=record.errorsCount;});this.errorsCount=errorsCount;return errorsCount;},hasErrors:function(){return!!this.countErrors();},updateState:function(){var active=this.elems.filter('active'),activeCount=active.length,columns=this.columns().elems;columns.each('disableAction',!!activeCount);this.isMultiEditing=activeCount>1;this.isSingleEditing=activeCount===1;this.activeRecords(active);return this;},getSelections:function(){return this.selections().getPageSelections();},editSelected:function(){var selections=this.getSelections();this.elems.each(function(record){if(!_.contains(selections,record.recordId)){record.active(false);}});selections.forEach(function(id){this.edit(id);},this);return this;},hasMessages:function(){return this.messages().length;},addMessage:function(message){var messages=this.messages();Array.isArray(message)?messages.push.apply(messages,message):messages.push(message);this.messages(messages);return this;},clearMessages:function(){this.messages.removeAll();return this;},onSelectionsChange:function(){if(this.hasActive()){this.editSelected();}},onDataSaved:function(){var msg={type:'success',message:this.successMsg};this.addMessage(msg).source('reload',{refresh:true});},onSaveError:function(errors){this.addMessage(errors).columns('hideLoader');}});});