define(['underscore','./dynamic-rows'],function(_,dynamicRows){'use strict';return dynamicRows.extend({defaults:{dataProvider:'',insertData:[],map:null,cacheGridData:[],deleteProperty:false,positionProvider:'position',dataLength:0,identificationProperty:'id',identificationDRProperty:'id',listens:{'insertData':'processingInsertData','recordData':'initElements setToInsertData'},mappingSettings:{enabled:true,distinct:true}},initObservable:function(){this._super().observe(['insertData']);return this;},setToInsertData:function(){var insertData=[],obj;if(this.recordData().length&&!this.update){this.recordData.each(function(recordData){obj={};obj[this.map[this.identificationProperty]]=recordData[this.identificationProperty];insertData.push(obj);},this);this.source.set(this.dataProvider,insertData);}},initChildren:function(){this.getChildItems().forEach(function(data,index){this.processingAddChild(data,this.startIndex+index,data[this.identificationDRProperty]);},this);return this;},initElements:function(data){var newData=this.getNewData(data);this.parsePagesData(data);if(newData.length){if(this.insertData().length){this.processingAddChild(newData[0],data.length-1,newData[0][this.identificationProperty]);}}
return this;},deleteRecord:function(index,recordId){this._super();this.updateInsertData(recordId);},updateInsertData:function(recordId){var data=this.getElementData(this.insertData(),recordId),prop=this.map[this.identificationDRProperty];this.insertData(_.reject(this.source.get(this.dataProvider),function(recordData){return~~recordData[prop]===~~data[prop];},this));},getElementData:function(array,index,property){var obj={},result;property?obj[property]=index:obj[this.map[this.identificationDRProperty]]=index;result=_.findWhere(array,obj);if(!result){property?obj[property]=index.toString():obj[this.map[this.identificationDRProperty]]=index.toString();}
result=_.findWhere(array,obj);return result;},processingAddChild:function(ctx,index,prop){if(this._elems.length>this.pageSize){return false;}
this.showSpinner(true);this.addChild(ctx,index,prop);},getNewData:function(data){var changes=[],tmpObj={};if(data.length!==this.relatedData.length){data.forEach(function(obj){tmpObj[this.identificationDRProperty]=obj[this.identificationDRProperty];if(!_.findWhere(this.relatedData,tmpObj)){changes.push(obj);}},this);}
return changes;},processingInsertData:function(data){var changes,obj={};changes=this._checkGridData(data);this.cacheGridData=data;if(changes.length){obj[this.identificationDRProperty]=changes[0][this.map[this.identificationProperty]];if(_.findWhere(this.recordData(),obj)){return false;}
changes.each(function(changedObject){this.mappingValue(changedObject);},this);}},mappingValue:function(data){var obj={},tmpObj={};if(this.mappingSettings.enabled){_.each(this.map,function(prop,index){obj[index]=!_.isUndefined(data[prop])?data[prop]:'';},this);}else{obj=data;}
if(this.mappingSettings.distinct){tmpObj[this.identificationDRProperty]=obj[this.identificationDRProperty];if(_.findWhere(this.recordData(),tmpObj)){return false;}}
if(!obj.hasOwnProperty(this.positionProvider)){this.setMaxPosition();obj[this.positionProvider]=this.maxPosition;}
this.source.set(this.dataScope+'.'+this.index+'.'+this.recordData().length,obj);},_checkGridData:function(data){var cacheLength=this.cacheGridData.length,curData=data.length,max=cacheLength>curData?this.cacheGridData:data,changes=[],obj={};max.each(function(record,index){obj[this.map[this.identificationDRProperty]]=record[this.map[this.identificationDRProperty]];if(!_.where(this.cacheGridData,obj).length){changes.push(data[index]);}},this);return changes;}});});