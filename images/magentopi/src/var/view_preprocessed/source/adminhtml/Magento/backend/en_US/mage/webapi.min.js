(function(factory){if(typeof define==='function'&&define.amd){define(["jquery","mage/mage"],factory);}else{factory(jQuery);}}(function($){"use strict";$.mage.Webapi=function(baseUrl,ajaxArgs){this.resource={uri:{base:'',api:'/webapi/rest'}};this.method={'create':'POST','update':'PUT','get':'GET','delete':'DELETE'};var validMethods=[this.method.create,this.method.update,this.method.get,this.method['delete']];if(ajaxArgs&&typeof ajaxArgs!=='object'){throw'ajaxArgs expected to be object';}
if(!(baseUrl&&typeof baseUrl==='string')){throw'String baseUrl parameter required';}
this.resource.uri.base=baseUrl[baseUrl.length-1]==='/'?baseUrl.substr(0,baseUrl.length-1):baseUrl;this.call=function(resourceUri,method,data,version){function validateMethod(method){if(validMethods.indexOf(method)===-1){throw'Method name is not valid: '+method;}
return method;}
var that=this;function getUrl(resourceUri,method,data,version){function ensureForwardSlash(str){return str[0]==='/'?str:'/'+str;}
if(version){resourceUri=version+ensureForwardSlash(resourceUri);}
if(data&&[that.method.get,that.method['delete']].indexOf(method)!==-1){resourceUri+=data;}
return that.resource.uri.base+that.resource.uri.api+ensureForwardSlash(resourceUri);}
var ajaxOptions={url:getUrl(resourceUri,method,data,version),type:validateMethod(method),data:data,dataType:'text',timeout:5000,processData:false,cache:false,beforeSend:function(request){request.setRequestHeader('Accept','application/json');}};$.extend(ajaxOptions,ajaxArgs);return $.ajax(ajaxOptions);};return this;};$.mage.Webapi.prototype.constructor=$.mage.Webapi;$.mage.Webapi.prototype.Product=function(version){if(!(typeof version==='string'&&/v\d+/i.test(version))){throw'Incorrect version format: '+version;}
version=version.toLowerCase();var that=this;that.resource.uri.products='/products/';return{get:function(idObj){if(!idObj.hasOwnProperty('id')){throw'"id" property expected in the object';}
return that.call(that.resource.uri.products,that.method.get,idObj.id,version);},create:function(productData){return that.call(that.resource.uri.products,that.method.create,productData,version);}};};}));